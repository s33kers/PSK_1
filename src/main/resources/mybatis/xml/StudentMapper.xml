<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="us.martink.mybatis.dao.StudentMapper">
    <resultMap id="BaseResultMap" type="us.martink.mybatis.entities.Student">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="first_name" jdbcType="VARCHAR" property="firstName"/>
        <result column="last_name" jdbcType="VARCHAR" property="lastName"/>
        <result column="registration_no" jdbcType="VARCHAR" property="registrationNo"/>
        <result column="university_id" jdbcType="INTEGER" property="universityId"/>

        <!-- Rankomis prirašytas ryšiui ManyToOne Student -> University -->
        <!-- Nested result (nėra N+1 select problemos) -->
        <association property="university" resultMap="us.martink.mybatis.dao.UniversityMapper.BaseResultMap"
                     columnPrefix="university_"/>

        <!-- Rankomis prirašytas ryšiui ManyToMany Student - Course -->
        <!-- Nested select (yra N+1 select problema) -->
        <collection property="courses" javaType="ArrayList" column="id" ofType="Course" select="selectCoursesForStudent"/>
    </resultMap>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        DELETE FROM psk_1.student
        WHERE id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" keyColumn="id" keyProperty="id" parameterType="us.martink.mybatis.entities.Student" useGeneratedKeys="true">
        INSERT INTO psk_1.student (first_name, last_name, registration_no, university_id)
        VALUES (#{firstName,jdbcType=VARCHAR}, #{lastName,jdbcType=VARCHAR}, #{registrationNo,jdbcType=VARCHAR}, #{universityId,jdbcType=INTEGER})
    </insert>

    <update id="updateByPrimaryKey" parameterType="us.martink.mybatis.entities.Student">
        UPDATE psk_1.student
        SET first_name = #{firstName,jdbcType=VARCHAR},
        last_name = #{lastName,jdbcType=VARCHAR},
        registration_no = #{registrationNo,jdbcType=VARCHAR},
        university_id = #{universityId,jdbcType=INTEGER}
        WHERE id = #{id,jdbcType=INTEGER}
    </update>

    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT id, first_name, last_name, registration_no, university_id
        FROM psk_1.student
        WHERE id = #{id,jdbcType=INTEGER}
    </select>
    
    <select id="selectAll" resultMap="BaseResultMap">
        SELECT s.id, s.first_name, s.last_name, s.registration_no, s.university_id,
            u.title as university_title
        FROM psk_1.student s
            LEFT JOIN psk_1.university u ON s.university_id = u.id
    </select>

    <!-- Rankomis prirašytas ryšiui ManyToMany Student - Course -->
    <select id="selectCoursesForStudent" resultType="Course">
        SELECT
            c.id,
            c.name
        FROM psk_1.course c
            JOIN psk_1.student_course sc on c.id = sc.course_id
        WHERE sc.student_id = #{id,jdbcType=INTEGER}
    </select>

</mapper>